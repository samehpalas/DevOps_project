pipeline {
   agent any
   tools {
        maven 'Maven'
    }
   stages {
     stage('Checkout') { //if scm inside jenkins server instad of jenkinsfile in github
            steps {
             git branch: 'main', credentialsId: 'sameh-github-cred', url: 'https://github.com/samehpalas/DevOps_project.git'//wrote from jenkins syntax helper
            }
         }
     stage('incremental version') {
       steps {// to increase pom.xml version every pipeline runs
        script {
       //  sh 'mvn build-helper:parse-version versions:set -DnewVersion=\\\${parsedVersion.majorVersion}.\\\${parsedVersion.minorVersion}.\\\${parsedVersion.nextIncrementedVersion} \
         //   versions:commit'
         //def matcher = readFile('jenkins-maven_tomcat/pom.xml') =~ '<version>(.+)</version>'
         //def version = matcher[0][1]
         // to increase image version every pipeline runs
         def reponame = "samehpalas/demo-test"  
         def v = "0"
         def tag= "$v-$BUILD_NUMBER"
         env.image_name  = "$reponame:$tag"
        }
       }
      }
       //from java code, build package .Jar
     stage('buildJAR') {
        steps {
          echo 'building the Application... '
             sh 'mvn package'
      }
     }
 }
}
 /// no image needed now, as tom cat just need a package for web eployment live,,After the above step the package is ready, and by shared volume (jenkins and tomcat) that prepared by docker compose and implemented in server
    // package now is also ready in tomcat
