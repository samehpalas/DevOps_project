## Create IAM OIDC provider
eksctl utils associate-iam-oidc-provider --region us-east-2 --cluster EKS01 --approve

##Download an IAM policy for the AWS Load Balancer Controller that allows it to make calls to AWS APIs on your behalf. (For all region except: AWS GovCloud (US-East) or AWS GovCloud (US-East))
curl -O https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/v2.7.1/docs/install/iam_policy.json


## Create an IAM policy called
aws iam create-policy --policy-name AWSLoadBalancerControllerIAMPolicy --policy-document file://iam_policy.json

## Create a IAM role and ServiceAccount
eksctl create iamserviceaccount \
  --cluster=EKS01 \
  --namespace=kube-system \
  --name=aws-load-balancer-controller \
  --role-name "AmazonEKSLoadBalancerControllerRole" \
  --attach-policy-arn=arn:aws:iam::423357588208:policy/AWSLoadBalancerControllerIAMPolicy \
  --approve

##Add anotation to the SA
kubectl annotate serviceaccount -n kube-system aws-load-balancer-controller \
    eks.amazonaws.com/sts-regional-endpoints=true

## Install the TargetGroupBinding CRDs
kubectl apply -k github.com/aws/eks-charts/stable/aws-load-balancer-controller/crds?ref=master
kubectl get crd

## To Install AWS Load Balancer Controller; Deploy the Helm chart 
helm repo add eks https://aws.github.io/eks-charts
helm repo update eks



## Configure AWS ALB (Apllication Load Balancer) to sit infront of Ingress
helm upgrade -i aws-load-balancer-controller eks/aws-load-balancer-controller -n kube-system --set clusterName=EKS01 --set serviceAccount.create=false --set serviceAccount.name=aws-load-balancer-controller 

kubectl -n kube-system rollout status deployment aws-load-balancer-controller

## Deploy Sample Application
kubectl apply -f gameApp.yaml

## Verify Ingress
kubectl get ingress/ingress-2048 -n game-2048

## Get Ingress URL
kubectl get ingress/ingress-2048 -n game-2048 -o jsonpath='{.status.loadBalancer.ingress[0].hostname}'

## Get EKS Pod data.
kubectl get pods --all-namespaces
